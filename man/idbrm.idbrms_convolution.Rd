% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convolution.R
\name{idbrm.idbrms_convolution}
\alias{idbrm.idbrms_convolution}
\title{Delay Convolution Model}
\usage{
\method{idbrm}{idbrms_convolution}(
  data,
  formula = id_formula(data),
  family = negbinomial(link = "identity"),
  priors = id_priors(data),
  custom_stancode = id_stancode(data),
  dry = FALSE,
  ...
)
}
\arguments{
\item{data}{A data.frame as produced by \code{prepare} that must contain the date,
location (as loc), primary (the data that the outcome is a convolution of)
and secondary (the observation of interest. Should have class
"idbrms_convolution".}

\item{formula}{A formula as defined using \code{id_formula} or as supported by
\code{brms::brm}.}

\item{family}{A observation model family as defined in \code{brms}.}

\item{priors}{A list of priors as defined using \code{brms} or \code{id_priors}.
Defaults to the the \code{id_priors} defined for the model class being fit.}

\item{custom_stancode}{A list of \code{stanvars} used to define custom stancode
in \code{brms}. By default uses the code designed for the model class being fit
(as specified using \code{id_stancode}).}

\item{dry}{Logical, defaults to TRUE. For testing purposes should just the
\code{stan} code be output with not fitting done.}

\item{...}{Additional parameters passed to \code{brms::brm}.}
}
\value{
A "brmsfit" object or stan code (if \code{dry = TRUE}).
}
\description{
A model that assumes that a secondary observations can be
predicted using a convolution of a primary observation multipled by some
scaling factor. An example use case of this model is to estimate the
case fatality rate (with the primary observation being cases and the
secondary observation being deaths) and then explore factors that influence
it.
}
\examples{
\donttest{
# define some example data
library(data.table)
dt <- data.table(
   region = "France", cases = seq(10, 500, by = 10),
   date = seq(as.Date("2020-10-01"), by = "days", length.out = 50)
   )
dt[, deaths := as.integer(shift(cases, 5) * 0.1)]
dt[is.na(deaths), deaths := 0]

dt <- prepare(
  dt, model = "convolution", location = "region",
  primary = "cases", secondary = "deaths",
  )

# fit the convolution model using a Poisson observation model
fit <- idbrm(data = dt, family = poisson(link = "identity"))
}
}
\author{
Sam Abbott
}
